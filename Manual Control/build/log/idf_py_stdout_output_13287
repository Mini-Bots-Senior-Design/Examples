[1/11] Performing build step for 'bootloader'
[1/1] cd "/Users/noahrobitshek/SeniorDesign/Examples/Manual Control/build/bootloader/esp-idf/esptool_py" && /Users/noahrobitshek/.espressif/python_env/idf5.5_py3.13_env/bin/python /Users/noahrobitshek/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/noahrobitshek/SeniorDesign/Examples/Manual\ Control/build/bootloader/bootloader.bin
Bootloader binary size 0x65c0 bytes. 0xa40 bytes (9%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/handlers.c.obj
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_echo_example_main.c.obj
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable uart_echo.elf
[9/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/noahrobitshek/SeniorDesign/Examples/Manual Control/build/uart_echo.bin
[10/11] cd "/Users/noahrobitshek/SeniorDesign/Examples/Manual Control/build/esp-idf/esptool_py" && /Users/noahrobitshek/.espressif/python_env/idf5.5_py3.13_env/bin/python /Users/noahrobitshek/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/noahrobitshek/SeniorDesign/Examples/Manual\ Control/build/partition_table/partition-table.bin /Users/noahrobitshek/SeniorDesign/Examples/Manual\ Control/build/uart_echo.bin
uart_echo.bin binary size 0x30f40 bytes. Smallest app partition is 0x100000 bytes. 0xcf0c0 bytes (81%) free.
[10/11] cd /Users/noahrobitshek/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/noahrobitshek/esp/esp-idf -D "SERIAL_TOOL=/Users/noahrobitshek/.espressif/python_env/idf5.5_py3.13_env/bin/python;;/Users/noahrobitshek/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D "WORKING_DIRECTORY=/Users/noahrobitshek/SeniorDesign/Examples/Manual Control/build" -P /Users/noahrobitshek/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 uart_echo.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-0001
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a0:a3:b3:fe:f9:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26048 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x0000756e... (100 %)
Wrote 26048 bytes (16444 compressed) at 0x00001000 in 0.7 seconds (effective 302.5 kbit/s)...
Hash of data verified.
Compressed 200512 bytes to 108718...
Writing at 0x00010000... (14 %)
Writing at 0x0001d075... (28 %)
Writing at 0x00022ef1... (42 %)
Writing at 0x00028daf... (57 %)
Writing at 0x000300db... (71 %)
Writing at 0x00036e59... (85 %)
Writing at 0x0003ceec... (100 %)
Wrote 200512 bytes (108718 compressed) at 0x00010000 in 2.9 seconds (effective 548.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 346.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
